name: "publish"
on:
  release:
    types: [published, prereleased]
permissions: {}
jobs:
  tag-and-publish:
    runs-on: ubuntu-latest
    permissions: {contents: write}
    steps:
    - name: Retrieve release version
      uses: actions/github-script@v7
      id: release-ver
      with:
        script: |
          const name = context.payload.release.tag_name;
          const regex = new RegExp('v?(\\d+\\.\\d+\\.\\d+));
          const match = name.match(regex);
          if (match) {
            return "v" + match[1];
          }
          return "";
        result-encoding: string
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      if: ${steps.release-ver.outputs.result}
    - name: Tag current code with release version
      run: |
        git tag ${{steps.release-ver.outputs.result}} ${{github.event.GITHUB_REF}}
        git push origin --tags
      if: ${steps.release-ver.outputs.result}
    - name: Publish the Go package version
      run: |
        GOPROXY=proxy.golang.org go list -m github.com/minherz/metadataserver@${{steps.release-ver.outputs.result}}
      if: ${steps.release-ver.outputs.result}
